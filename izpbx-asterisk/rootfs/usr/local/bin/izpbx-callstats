#!/bin/sh
# asterisk realtime calls status
# written by Ugo Viti <ugo.viti@initzero.it>
# version: 20170317
 
izcallstats() {
 channels_file=/tmp/izcallstats.test
 #channels_file=$(mktemp)
 asterisk -r -x "core show channels concise" 2>&1 > $channels_file
 n=1

 #cat $channels_file | grep -v ^Local | while read call; do
 #cat $channels_file | while read call; do
 cat $channels_file | grep -w -v "(Outgoing Line)" | while read call; do
  call_application=$(echo $call | awk -F'!' '{print $6}')
 
  case $call_application in
    AppDial)
        donothing=""
        ;;
    Dial|*)
        n=$n
        call_channel=$(echo $call | awk -F'!' '{print $1}')
        call_context=$(echo $call | awk -F'!' '{print $2}')
        call_extension=$(echo $call | awk -F'!' '{print $3}')
        call_prio=$(echo $call | awk -F'!' '{print $4}')
        call_state=$(echo $call | awk -F'!' '{print $5}')
        call_application=$(echo $call | awk -F'!' '{print $6}')
        call_data=$(echo $call | awk -F'!' '{print $7}' | tr -d '(' | tr -d ')' | sed 's/ /_/g')
        call_callerid=$(echo $call | awk -F'!' '{print $8}')
        call_accountcode=$(echo $call | awk -F'!' '{print $9}')
        call_peeraccount=$(echo $call | awk -F'!' '{print $10}')
        call_duration=$(echo $call | awk -F'!' '{print $12}')
        call_bridgeid=$(echo $call | awk -F'!' '{print $13}')
        call_sysid=$(echo $call | awk -F'!' '{print $14}')
 
        call_duration_human=$(show_time_duration $call_duration)
        call_channel_type=$(echo $call_channel | cut -d "/" -f1)
        call_channel_orig=$(echo $call_channel | cut -d "/" -f2 | cut -d "@" -f1 | cut -d "-" -f1)

        if [ -z "$call_bridgeid" ]
                  then
                    call_did="$(echo $call_data | awk -F',' '{print $1}' | sed -s 's/SIP\///g' | sed -s 's/&/,/g')"
                  else
                    call_did="$(cat $channels_file | grep -w "$call_bridgeid" | grep "AppDial" | awk -F'!' '{print $8}')"
                fi

	# try to find valid did
        [ -z "$call_did" ] && call_did="$(echo $call_data | cut -d "," -f1)"
	# set to application if can't be found
        [ -z "$call_did" ] && call_did="$call_application"

	if [[ $BRIEF -eq 1 ]]
	  then
            if [[ $DEBUG -eq 1 ]]
              then
               #echo "durata:[$call_duration_human] stato:[$call_state] da:[$call_callerid] a:[$call_did]"
               #echo "chiamata da '$call_callerid' a '$call_did',stato '$call_state', durata '$call_duration_human'"
               echo "$n) da:[$call_callerid] a:[$call_did] stato:[$call_state] app:[$call_application] canale:[$call_channel] durata:[$call_duration_human]"
              else
               echo "$n) orig:[$call_channel_orig] da:[$call_callerid] a:[$call_did] durata:[$call_duration_human]"
            fi
	  else
            if [[ $DEBUG -eq 1 ]]
              then
               echo "$n $call_callerid $call_did $call_state $call_application $call_channel $call_duration_human"
              else
               echo "$n $call_channel_orig $call_callerid $call_did $call_state $call_duration_human"
            fi
	fi
        let n=$n+1
                ;;
  esac
 done
}
 
show_time_duration() {
 if [ $1 -ge 86400 ]
   then
     days="$(echo "scale=0; $1 / 86400" | bc)"
     date -u --date="1970-01-01 00:00:00 UTC $1 seconds" +"${days} day %H:%M:%S"
   else
     date -u --date="1970-01-01 00:00:00 UTC $1 seconds" +"%H:%M:%S"
 fi
}
 
# DEFAULT VARIABLES
BRIEF=0
DEBUG=0

main() {
  if [[ $BRIEF -eq 1 ]]
    then
      izcallstats
    else
      if [[ $DEBUG = 1 ]] 
	then
	  echo -e "N. DA A STATO APPLICAZIONE CANALE DURATA\n-- --------- --------- --------- -------- -------- --------\n$(izcallstats)" | column -t
	else
	  echo -e "N. ORIG DA A STATO DURATA\n-- -------- -------- -------- -------- --------\n$(izcallstats)" | column -t
      fi
  fi
}


## default program menu and arguments validations
NO_ARGS=0
E_OPTERROR=65
 
while getopts "bd" option
do
  case $option in
    b ) # brief switch
        BRIEF=1
        ;;
    d ) # debug switch
        DEBUG=1
        ;;
  esac
done
# Move argument pointer to next.
shift $(($OPTIND - 1))
 
main
#rm -f $channels_file

